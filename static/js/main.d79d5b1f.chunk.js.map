{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","Footer","Component","App","state","cards","_this","find","o","i","count","setState","console","log","this","sort","Math","random","gameOver","forEach","card","alert","concat","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"gjEAiBeA,SAdF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACxDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,WAI7CV,EAAAC,EAAAC,cAAA,cCPOS,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YC0B1CC,SA1BA,SAAAd,GAAK,OAChBC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,iCAAyDJ,EAAMa,UAC/DZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,wYAGAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACYJ,EAAMe,MADlB,eACqCf,EAAMgB,YAG/Cf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBCLxBa,0LAVP,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,2DANCe,cCgENC,6MA3DbC,MAAQ,CACNC,QACAN,MAAO,EACPC,UAAW,KAGbV,WAAa,SAAAC,GACXe,EAAKF,MAAMC,MAAME,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAEjB,KAAOA,EAAI,CACf,GAAuB,IAAnBc,EAAMI,GAAGC,MAMX,OALAL,EAAMI,GAAGC,MAAQL,EAAMI,GAAGC,MAAQ,EAClCJ,EAAKK,SAAS,CAAEZ,MAAOO,EAAKF,MAAML,MAAQ,GAAK,WAC7Ca,QAAQC,IAAIC,KAAKV,MAAML,SAEzBO,EAAKF,MAAMC,MAAMU,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPX,EAAKY,iBAMbA,SAAW,WAWT,OAVIZ,EAAKF,MAAML,MAAQO,EAAKF,MAAMJ,WAChCM,EAAKK,SAAS,CAAEX,UAAWM,EAAKF,MAAML,OAAS,WAC7Ca,QAAQC,IAAIC,KAAKV,MAAMJ,aAG3BM,EAAKF,MAAMC,MAAMc,QAAQ,SAAAC,GACvBA,EAAKV,MAAQ,IAEfW,MAAK,sBAAAC,OAAuBhB,EAAKF,MAAML,QACvCO,EAAKK,SAAS,CAAEZ,MAAO,KAChB,2EAIA,IAAAwB,EAAAT,KACP,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,CAAQ1B,MAAOe,KAAKV,MAAML,MAAOC,UAAWc,KAAKV,MAAMJ,WAAvD,cACCc,KAAKV,MAAMC,MAAMqB,IAAI,SAAAN,GAAI,OACxBnC,EAAAC,EAAAC,cAACwC,EAAD,CACErC,WAAYiC,EAAKjC,WACjBC,GAAI6B,EAAK7B,GACTqC,IAAKR,EAAK7B,GACVI,MAAOyB,EAAKzB,WAIlBV,EAAAC,EAAAC,cAAC0C,EAAD,cArDU3B,mBCIlB4B,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d79d5b1f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n    <div>\r\n        <div className=\"outside\">\r\n            <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n                <div className=\"img-container\">\r\n                    <img alt={props.name} src={props.image} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br></br>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Card; ","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">Hey There! Welcome to the Dog {props.children}</h1>\r\n                <hr className=\"my-4\"></hr>\r\n                <p>This is a memory clicking game built entirely with React. It will keep track of your score each time you correctly click on an image you haven't clicked\r\n                before. Your score will increase with each correct click, and the score will completely reset with an incorrect click. Each time an image is clicked,\r\n                    the images rendered will shuffle themselves in a random order. Best of luck!</p>\r\n                <br></br>\r\n                <div className=\"header\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\"></div>\r\n                        <div className=\"col-4\">\r\n                            <div className=\"scores\">\r\n                                Score: {props.score} Highscore: {props.highscore}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"footer\">\r\n                    <p>Created by: Patience Deaton 2020 Â©</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\nimport cards from \"./cards.json\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    cards,\r\n    score: 0,\r\n    highscore: 0\r\n  };\r\n\r\n  clickCount = id => {\r\n    this.state.cards.find((o, i) => {\r\n      if (o.id === id) {\r\n        if (cards[i].count === 0) {\r\n          cards[i].count = cards[i].count + 1;\r\n          this.setState({ score: this.state.score + 1 }, function () {\r\n            console.log(this.state.score);\r\n          });\r\n          this.state.cards.sort(() => Math.random() - 0.5)\r\n          return true;\r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver = () => {\r\n    if (this.state.score > this.state.highscore) {\r\n      this.setState({ highscore: this.state.score }, function () {\r\n        console.log(this.state.highscore);\r\n      });\r\n    }\r\n    this.state.cards.forEach(card => {\r\n      card.count = 0;\r\n    });\r\n    alert(`Game Over \\nscore: ${this.state.score}`);\r\n    this.setState({ score: 0 });\r\n    return true;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Wrapper>\r\n          <Header score={this.state.score} highscore={this.state.highscore}>Click Game</Header>\r\n          {this.state.cards.map(card => (\r\n            <Card\r\n              clickCount={this.clickCount}\r\n              id={card.id}\r\n              key={card.id}\r\n              image={card.image}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n        <Footer />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// import React, { Component } from \"react\";\r\n// import Card from \"./components/Card\";\r\n// import Wrapper from \"./components/Wrapper\";\r\n// import Header from \"./components/Header\";\r\n// import cards from \"./cards.json\";\r\n// import \"./App.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}