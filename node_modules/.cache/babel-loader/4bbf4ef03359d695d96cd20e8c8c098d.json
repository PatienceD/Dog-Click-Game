{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patie\\\\Documents\\\\Github\\\\Dog-Click-Game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport Footer from \"./components/Footer/Footer\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n    this.clickCount = id => {\n      this.state.cards.find((o, i) => {\n        if (o.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over \\nscore: \".concat(this.state.score));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Click Game\"), this.state.cards.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\patie\\Documents\\Github\\Dog-Click-Game\\src\\App.js"],"names":["React","Component","Card","Wrapper","Header","cards","Footer","App","state","score","highscore","clickCount","id","find","o","i","count","setState","console","log","sort","Math","random","gameOver","forEach","card","alert","render","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\nimport cards from \"./cards.json\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    cards,\r\n    score: 0,\r\n    highscore: 0\r\n  };\r\n\r\n  clickCount = id => {\r\n    this.state.cards.find((o, i) => {\r\n      if (o.id === id) {\r\n        if (cards[i].count === 0) {\r\n          cards[i].count = cards[i].count + 1;\r\n          this.setState({ score: this.state.score + 1 }, function () {\r\n            console.log(this.state.score);\r\n          });\r\n          this.state.cards.sort(() => Math.random() - 0.5)\r\n          return true;\r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver = () => {\r\n    if (this.state.score > this.state.highscore) {\r\n      this.setState({ highscore: this.state.score }, function () {\r\n        console.log(this.state.highscore);\r\n      });\r\n    }\r\n    this.state.cards.forEach(card => {\r\n      card.count = 0;\r\n    });\r\n    alert(`Game Over \\nscore: ${this.state.score}`);\r\n    this.setState({ score: 0 });\r\n    return true;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <Wrapper>\r\n          <Header score={this.state.score} highscore={this.state.highscore}>Click Game</Header>\r\n          {this.state.cards.map(card => (\r\n            <Card\r\n              clickCount={this.clickCount}\r\n              id={card.id}\r\n              key={card.id}\r\n              image={card.image}\r\n            />\r\n          ))}\r\n           <Footer />\r\n        </Wrapper>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}