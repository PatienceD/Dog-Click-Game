{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patie\\\\Documents\\\\Github\\\\Dog-Click-Game\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"jumbotron\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  className: \"display-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Hey There!\"), React.createElement(\"p\", {\n  className: \"lead\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Welcome to the Dog Click Game.\"), React.createElement(\"hr\", {\n  className: \"my-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"This is a memory clicking game built with React. This application keeps track of user's score each time they correctly click on an image they haven't clicked before. The user's score will increase with each correct click, and the score will completely reset with an incorrect click. Each time an image is clicked, the images rendered to the page will shuffle themselves in a random order. Good luck!\"), React.createElement(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.children)), React.createElement(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"scores\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Score: \", props.score, \" Highscore: \", props.highscore))))));\n\nexport default Header;","map":{"version":3,"sources":["C:\\Users\\patie\\Documents\\Github\\Dog-Click-Game\\src\\components\\Header\\Header.js"],"names":["React","Header","props","children","score","highscore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAGI;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qZAJJ,EAOI;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBA,KAAK,CAACC,QAA9B,CADJ,CADJ,EAII;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACYD,KAAK,CAACE,KADlB,kBACqCF,KAAK,CAACG,SAD3C,CADJ,CAJJ,CAPJ,CADJ,CADJ,CADJ;;AA0BA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">Hey There!</h1>\r\n                <p className=\"lead\">Welcome to the Dog Click Game.</p>\r\n                <hr className=\"my-4\"></hr>\r\n                <p>This is a memory clicking game built with React. This application keeps track of user's score each time they correctly click on an image they haven't clicked\r\n                before. The user's score will increase with each correct click, and the score will completely reset with an incorrect click. Each time an image is clicked,\r\n                    the images rendered to the page will shuffle themselves in a random order. Good luck!</p>\r\n                <div className=\"header\">\r\n                    <div className=\"row\">\r\n                        <div className=\"title\">{props.children}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"scores\">\r\n                            Score: {props.score} Highscore: {props.highscore}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}